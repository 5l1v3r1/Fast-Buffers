// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Performance_30.proto

#ifndef PROTOBUF_Performance_5f30_2eproto__INCLUDED
#define PROTOBUF_Performance_5f30_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace performance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Performance_5f30_2eproto();
void protobuf_AssignDesc_Performance_5f30_2eproto();
void protobuf_ShutdownFile_Performance_5f30_2eproto();

class Performance;

// ===================================================================

class Performance : public ::google::protobuf::Message {
 public:
  Performance();
  virtual ~Performance();

  Performance(const Performance& from);

  inline Performance& operator=(const Performance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance& default_instance();

  void Swap(Performance* other);

  // implements Message ----------------------------------------------

  Performance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance& from);
  void MergeFrom(const Performance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed32 m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline ::google::protobuf::int32 m1() const;
  inline void set_m1(::google::protobuf::int32 value);

  // required sfixed32 m2 = 2;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 2;
  inline ::google::protobuf::int32 m2() const;
  inline void set_m2(::google::protobuf::int32 value);

  // required sfixed32 m3 = 3;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 3;
  inline ::google::protobuf::int32 m3() const;
  inline void set_m3(::google::protobuf::int32 value);

  // required sfixed32 m4 = 4;
  inline bool has_m4() const;
  inline void clear_m4();
  static const int kM4FieldNumber = 4;
  inline ::google::protobuf::int32 m4() const;
  inline void set_m4(::google::protobuf::int32 value);

  // required sfixed32 m5 = 5;
  inline bool has_m5() const;
  inline void clear_m5();
  static const int kM5FieldNumber = 5;
  inline ::google::protobuf::int32 m5() const;
  inline void set_m5(::google::protobuf::int32 value);

  // required sfixed32 m6 = 6;
  inline bool has_m6() const;
  inline void clear_m6();
  static const int kM6FieldNumber = 6;
  inline ::google::protobuf::int32 m6() const;
  inline void set_m6(::google::protobuf::int32 value);

  // required sfixed32 m7 = 7;
  inline bool has_m7() const;
  inline void clear_m7();
  static const int kM7FieldNumber = 7;
  inline ::google::protobuf::int32 m7() const;
  inline void set_m7(::google::protobuf::int32 value);

  // required sfixed32 m8 = 8;
  inline bool has_m8() const;
  inline void clear_m8();
  static const int kM8FieldNumber = 8;
  inline ::google::protobuf::int32 m8() const;
  inline void set_m8(::google::protobuf::int32 value);

  // required sfixed32 m9 = 9;
  inline bool has_m9() const;
  inline void clear_m9();
  static const int kM9FieldNumber = 9;
  inline ::google::protobuf::int32 m9() const;
  inline void set_m9(::google::protobuf::int32 value);

  // required sfixed32 m10 = 10;
  inline bool has_m10() const;
  inline void clear_m10();
  static const int kM10FieldNumber = 10;
  inline ::google::protobuf::int32 m10() const;
  inline void set_m10(::google::protobuf::int32 value);

  // required sfixed32 m11 = 11;
  inline bool has_m11() const;
  inline void clear_m11();
  static const int kM11FieldNumber = 11;
  inline ::google::protobuf::int32 m11() const;
  inline void set_m11(::google::protobuf::int32 value);

  // required sfixed32 m12 = 12;
  inline bool has_m12() const;
  inline void clear_m12();
  static const int kM12FieldNumber = 12;
  inline ::google::protobuf::int32 m12() const;
  inline void set_m12(::google::protobuf::int32 value);

  // required sfixed32 m13 = 13;
  inline bool has_m13() const;
  inline void clear_m13();
  static const int kM13FieldNumber = 13;
  inline ::google::protobuf::int32 m13() const;
  inline void set_m13(::google::protobuf::int32 value);

  // required sfixed32 m14 = 14;
  inline bool has_m14() const;
  inline void clear_m14();
  static const int kM14FieldNumber = 14;
  inline ::google::protobuf::int32 m14() const;
  inline void set_m14(::google::protobuf::int32 value);

  // required sfixed32 m15 = 15;
  inline bool has_m15() const;
  inline void clear_m15();
  static const int kM15FieldNumber = 15;
  inline ::google::protobuf::int32 m15() const;
  inline void set_m15(::google::protobuf::int32 value);

  // required sfixed32 m16 = 16;
  inline bool has_m16() const;
  inline void clear_m16();
  static const int kM16FieldNumber = 16;
  inline ::google::protobuf::int32 m16() const;
  inline void set_m16(::google::protobuf::int32 value);

  // required sfixed32 m17 = 17;
  inline bool has_m17() const;
  inline void clear_m17();
  static const int kM17FieldNumber = 17;
  inline ::google::protobuf::int32 m17() const;
  inline void set_m17(::google::protobuf::int32 value);

  // required sfixed32 m18 = 18;
  inline bool has_m18() const;
  inline void clear_m18();
  static const int kM18FieldNumber = 18;
  inline ::google::protobuf::int32 m18() const;
  inline void set_m18(::google::protobuf::int32 value);

  // required sfixed32 m19 = 19;
  inline bool has_m19() const;
  inline void clear_m19();
  static const int kM19FieldNumber = 19;
  inline ::google::protobuf::int32 m19() const;
  inline void set_m19(::google::protobuf::int32 value);

  // required sfixed32 m20 = 20;
  inline bool has_m20() const;
  inline void clear_m20();
  static const int kM20FieldNumber = 20;
  inline ::google::protobuf::int32 m20() const;
  inline void set_m20(::google::protobuf::int32 value);

  // required sfixed32 m21 = 21;
  inline bool has_m21() const;
  inline void clear_m21();
  static const int kM21FieldNumber = 21;
  inline ::google::protobuf::int32 m21() const;
  inline void set_m21(::google::protobuf::int32 value);

  // required sfixed32 m22 = 22;
  inline bool has_m22() const;
  inline void clear_m22();
  static const int kM22FieldNumber = 22;
  inline ::google::protobuf::int32 m22() const;
  inline void set_m22(::google::protobuf::int32 value);

  // required sfixed32 m23 = 23;
  inline bool has_m23() const;
  inline void clear_m23();
  static const int kM23FieldNumber = 23;
  inline ::google::protobuf::int32 m23() const;
  inline void set_m23(::google::protobuf::int32 value);

  // required sfixed32 m24 = 24;
  inline bool has_m24() const;
  inline void clear_m24();
  static const int kM24FieldNumber = 24;
  inline ::google::protobuf::int32 m24() const;
  inline void set_m24(::google::protobuf::int32 value);

  // required sfixed32 m25 = 25;
  inline bool has_m25() const;
  inline void clear_m25();
  static const int kM25FieldNumber = 25;
  inline ::google::protobuf::int32 m25() const;
  inline void set_m25(::google::protobuf::int32 value);

  // required sfixed32 m26 = 26;
  inline bool has_m26() const;
  inline void clear_m26();
  static const int kM26FieldNumber = 26;
  inline ::google::protobuf::int32 m26() const;
  inline void set_m26(::google::protobuf::int32 value);

  // required sfixed32 m27 = 27;
  inline bool has_m27() const;
  inline void clear_m27();
  static const int kM27FieldNumber = 27;
  inline ::google::protobuf::int32 m27() const;
  inline void set_m27(::google::protobuf::int32 value);

  // required sfixed32 m28 = 28;
  inline bool has_m28() const;
  inline void clear_m28();
  static const int kM28FieldNumber = 28;
  inline ::google::protobuf::int32 m28() const;
  inline void set_m28(::google::protobuf::int32 value);

  // required sfixed32 m29 = 29;
  inline bool has_m29() const;
  inline void clear_m29();
  static const int kM29FieldNumber = 29;
  inline ::google::protobuf::int32 m29() const;
  inline void set_m29(::google::protobuf::int32 value);

  // required sfixed32 m30 = 30;
  inline bool has_m30() const;
  inline void clear_m30();
  static const int kM30FieldNumber = 30;
  inline ::google::protobuf::int32 m30() const;
  inline void set_m30(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m3();
  inline void clear_has_m3();
  inline void set_has_m4();
  inline void clear_has_m4();
  inline void set_has_m5();
  inline void clear_has_m5();
  inline void set_has_m6();
  inline void clear_has_m6();
  inline void set_has_m7();
  inline void clear_has_m7();
  inline void set_has_m8();
  inline void clear_has_m8();
  inline void set_has_m9();
  inline void clear_has_m9();
  inline void set_has_m10();
  inline void clear_has_m10();
  inline void set_has_m11();
  inline void clear_has_m11();
  inline void set_has_m12();
  inline void clear_has_m12();
  inline void set_has_m13();
  inline void clear_has_m13();
  inline void set_has_m14();
  inline void clear_has_m14();
  inline void set_has_m15();
  inline void clear_has_m15();
  inline void set_has_m16();
  inline void clear_has_m16();
  inline void set_has_m17();
  inline void clear_has_m17();
  inline void set_has_m18();
  inline void clear_has_m18();
  inline void set_has_m19();
  inline void clear_has_m19();
  inline void set_has_m20();
  inline void clear_has_m20();
  inline void set_has_m21();
  inline void clear_has_m21();
  inline void set_has_m22();
  inline void clear_has_m22();
  inline void set_has_m23();
  inline void clear_has_m23();
  inline void set_has_m24();
  inline void clear_has_m24();
  inline void set_has_m25();
  inline void clear_has_m25();
  inline void set_has_m26();
  inline void clear_has_m26();
  inline void set_has_m27();
  inline void clear_has_m27();
  inline void set_has_m28();
  inline void clear_has_m28();
  inline void set_has_m29();
  inline void clear_has_m29();
  inline void set_has_m30();
  inline void clear_has_m30();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m1_;
  ::google::protobuf::int32 m2_;
  ::google::protobuf::int32 m3_;
  ::google::protobuf::int32 m4_;
  ::google::protobuf::int32 m5_;
  ::google::protobuf::int32 m6_;
  ::google::protobuf::int32 m7_;
  ::google::protobuf::int32 m8_;
  ::google::protobuf::int32 m9_;
  ::google::protobuf::int32 m10_;
  ::google::protobuf::int32 m11_;
  ::google::protobuf::int32 m12_;
  ::google::protobuf::int32 m13_;
  ::google::protobuf::int32 m14_;
  ::google::protobuf::int32 m15_;
  ::google::protobuf::int32 m16_;
  ::google::protobuf::int32 m17_;
  ::google::protobuf::int32 m18_;
  ::google::protobuf::int32 m19_;
  ::google::protobuf::int32 m20_;
  ::google::protobuf::int32 m21_;
  ::google::protobuf::int32 m22_;
  ::google::protobuf::int32 m23_;
  ::google::protobuf::int32 m24_;
  ::google::protobuf::int32 m25_;
  ::google::protobuf::int32 m26_;
  ::google::protobuf::int32 m27_;
  ::google::protobuf::int32 m28_;
  ::google::protobuf::int32 m29_;
  ::google::protobuf::int32 m30_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_Performance_5f30_2eproto();
  friend void protobuf_AssignDesc_Performance_5f30_2eproto();
  friend void protobuf_ShutdownFile_Performance_5f30_2eproto();

  void InitAsDefaultInstance();
  static Performance* default_instance_;
};
// ===================================================================


// ===================================================================

// Performance

// required sfixed32 m1 = 1;
inline bool Performance::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance::clear_m1() {
  m1_ = 0;
  clear_has_m1();
}
inline ::google::protobuf::int32 Performance::m1() const {
  return m1_;
}
inline void Performance::set_m1(::google::protobuf::int32 value) {
  set_has_m1();
  m1_ = value;
}

// required sfixed32 m2 = 2;
inline bool Performance::has_m2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance::set_has_m2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance::clear_has_m2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance::clear_m2() {
  m2_ = 0;
  clear_has_m2();
}
inline ::google::protobuf::int32 Performance::m2() const {
  return m2_;
}
inline void Performance::set_m2(::google::protobuf::int32 value) {
  set_has_m2();
  m2_ = value;
}

// required sfixed32 m3 = 3;
inline bool Performance::has_m3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance::set_has_m3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance::clear_has_m3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance::clear_m3() {
  m3_ = 0;
  clear_has_m3();
}
inline ::google::protobuf::int32 Performance::m3() const {
  return m3_;
}
inline void Performance::set_m3(::google::protobuf::int32 value) {
  set_has_m3();
  m3_ = value;
}

// required sfixed32 m4 = 4;
inline bool Performance::has_m4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance::set_has_m4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance::clear_has_m4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance::clear_m4() {
  m4_ = 0;
  clear_has_m4();
}
inline ::google::protobuf::int32 Performance::m4() const {
  return m4_;
}
inline void Performance::set_m4(::google::protobuf::int32 value) {
  set_has_m4();
  m4_ = value;
}

// required sfixed32 m5 = 5;
inline bool Performance::has_m5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance::set_has_m5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance::clear_has_m5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance::clear_m5() {
  m5_ = 0;
  clear_has_m5();
}
inline ::google::protobuf::int32 Performance::m5() const {
  return m5_;
}
inline void Performance::set_m5(::google::protobuf::int32 value) {
  set_has_m5();
  m5_ = value;
}

// required sfixed32 m6 = 6;
inline bool Performance::has_m6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance::set_has_m6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance::clear_has_m6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance::clear_m6() {
  m6_ = 0;
  clear_has_m6();
}
inline ::google::protobuf::int32 Performance::m6() const {
  return m6_;
}
inline void Performance::set_m6(::google::protobuf::int32 value) {
  set_has_m6();
  m6_ = value;
}

// required sfixed32 m7 = 7;
inline bool Performance::has_m7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance::set_has_m7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance::clear_has_m7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance::clear_m7() {
  m7_ = 0;
  clear_has_m7();
}
inline ::google::protobuf::int32 Performance::m7() const {
  return m7_;
}
inline void Performance::set_m7(::google::protobuf::int32 value) {
  set_has_m7();
  m7_ = value;
}

// required sfixed32 m8 = 8;
inline bool Performance::has_m8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance::set_has_m8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance::clear_has_m8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance::clear_m8() {
  m8_ = 0;
  clear_has_m8();
}
inline ::google::protobuf::int32 Performance::m8() const {
  return m8_;
}
inline void Performance::set_m8(::google::protobuf::int32 value) {
  set_has_m8();
  m8_ = value;
}

// required sfixed32 m9 = 9;
inline bool Performance::has_m9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance::set_has_m9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance::clear_has_m9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance::clear_m9() {
  m9_ = 0;
  clear_has_m9();
}
inline ::google::protobuf::int32 Performance::m9() const {
  return m9_;
}
inline void Performance::set_m9(::google::protobuf::int32 value) {
  set_has_m9();
  m9_ = value;
}

// required sfixed32 m10 = 10;
inline bool Performance::has_m10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance::set_has_m10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance::clear_has_m10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance::clear_m10() {
  m10_ = 0;
  clear_has_m10();
}
inline ::google::protobuf::int32 Performance::m10() const {
  return m10_;
}
inline void Performance::set_m10(::google::protobuf::int32 value) {
  set_has_m10();
  m10_ = value;
}

// required sfixed32 m11 = 11;
inline bool Performance::has_m11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance::set_has_m11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance::clear_has_m11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance::clear_m11() {
  m11_ = 0;
  clear_has_m11();
}
inline ::google::protobuf::int32 Performance::m11() const {
  return m11_;
}
inline void Performance::set_m11(::google::protobuf::int32 value) {
  set_has_m11();
  m11_ = value;
}

// required sfixed32 m12 = 12;
inline bool Performance::has_m12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance::set_has_m12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance::clear_has_m12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance::clear_m12() {
  m12_ = 0;
  clear_has_m12();
}
inline ::google::protobuf::int32 Performance::m12() const {
  return m12_;
}
inline void Performance::set_m12(::google::protobuf::int32 value) {
  set_has_m12();
  m12_ = value;
}

// required sfixed32 m13 = 13;
inline bool Performance::has_m13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance::set_has_m13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance::clear_has_m13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance::clear_m13() {
  m13_ = 0;
  clear_has_m13();
}
inline ::google::protobuf::int32 Performance::m13() const {
  return m13_;
}
inline void Performance::set_m13(::google::protobuf::int32 value) {
  set_has_m13();
  m13_ = value;
}

// required sfixed32 m14 = 14;
inline bool Performance::has_m14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance::set_has_m14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance::clear_has_m14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance::clear_m14() {
  m14_ = 0;
  clear_has_m14();
}
inline ::google::protobuf::int32 Performance::m14() const {
  return m14_;
}
inline void Performance::set_m14(::google::protobuf::int32 value) {
  set_has_m14();
  m14_ = value;
}

// required sfixed32 m15 = 15;
inline bool Performance::has_m15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance::set_has_m15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance::clear_has_m15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance::clear_m15() {
  m15_ = 0;
  clear_has_m15();
}
inline ::google::protobuf::int32 Performance::m15() const {
  return m15_;
}
inline void Performance::set_m15(::google::protobuf::int32 value) {
  set_has_m15();
  m15_ = value;
}

// required sfixed32 m16 = 16;
inline bool Performance::has_m16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance::set_has_m16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance::clear_has_m16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance::clear_m16() {
  m16_ = 0;
  clear_has_m16();
}
inline ::google::protobuf::int32 Performance::m16() const {
  return m16_;
}
inline void Performance::set_m16(::google::protobuf::int32 value) {
  set_has_m16();
  m16_ = value;
}

// required sfixed32 m17 = 17;
inline bool Performance::has_m17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance::set_has_m17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance::clear_has_m17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance::clear_m17() {
  m17_ = 0;
  clear_has_m17();
}
inline ::google::protobuf::int32 Performance::m17() const {
  return m17_;
}
inline void Performance::set_m17(::google::protobuf::int32 value) {
  set_has_m17();
  m17_ = value;
}

// required sfixed32 m18 = 18;
inline bool Performance::has_m18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance::set_has_m18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance::clear_has_m18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance::clear_m18() {
  m18_ = 0;
  clear_has_m18();
}
inline ::google::protobuf::int32 Performance::m18() const {
  return m18_;
}
inline void Performance::set_m18(::google::protobuf::int32 value) {
  set_has_m18();
  m18_ = value;
}

// required sfixed32 m19 = 19;
inline bool Performance::has_m19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance::set_has_m19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance::clear_has_m19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance::clear_m19() {
  m19_ = 0;
  clear_has_m19();
}
inline ::google::protobuf::int32 Performance::m19() const {
  return m19_;
}
inline void Performance::set_m19(::google::protobuf::int32 value) {
  set_has_m19();
  m19_ = value;
}

// required sfixed32 m20 = 20;
inline bool Performance::has_m20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance::set_has_m20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance::clear_has_m20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance::clear_m20() {
  m20_ = 0;
  clear_has_m20();
}
inline ::google::protobuf::int32 Performance::m20() const {
  return m20_;
}
inline void Performance::set_m20(::google::protobuf::int32 value) {
  set_has_m20();
  m20_ = value;
}

// required sfixed32 m21 = 21;
inline bool Performance::has_m21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance::set_has_m21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance::clear_has_m21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance::clear_m21() {
  m21_ = 0;
  clear_has_m21();
}
inline ::google::protobuf::int32 Performance::m21() const {
  return m21_;
}
inline void Performance::set_m21(::google::protobuf::int32 value) {
  set_has_m21();
  m21_ = value;
}

// required sfixed32 m22 = 22;
inline bool Performance::has_m22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance::set_has_m22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance::clear_has_m22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance::clear_m22() {
  m22_ = 0;
  clear_has_m22();
}
inline ::google::protobuf::int32 Performance::m22() const {
  return m22_;
}
inline void Performance::set_m22(::google::protobuf::int32 value) {
  set_has_m22();
  m22_ = value;
}

// required sfixed32 m23 = 23;
inline bool Performance::has_m23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance::set_has_m23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance::clear_has_m23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance::clear_m23() {
  m23_ = 0;
  clear_has_m23();
}
inline ::google::protobuf::int32 Performance::m23() const {
  return m23_;
}
inline void Performance::set_m23(::google::protobuf::int32 value) {
  set_has_m23();
  m23_ = value;
}

// required sfixed32 m24 = 24;
inline bool Performance::has_m24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance::set_has_m24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance::clear_has_m24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance::clear_m24() {
  m24_ = 0;
  clear_has_m24();
}
inline ::google::protobuf::int32 Performance::m24() const {
  return m24_;
}
inline void Performance::set_m24(::google::protobuf::int32 value) {
  set_has_m24();
  m24_ = value;
}

// required sfixed32 m25 = 25;
inline bool Performance::has_m25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance::set_has_m25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance::clear_has_m25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance::clear_m25() {
  m25_ = 0;
  clear_has_m25();
}
inline ::google::protobuf::int32 Performance::m25() const {
  return m25_;
}
inline void Performance::set_m25(::google::protobuf::int32 value) {
  set_has_m25();
  m25_ = value;
}

// required sfixed32 m26 = 26;
inline bool Performance::has_m26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance::set_has_m26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance::clear_has_m26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance::clear_m26() {
  m26_ = 0;
  clear_has_m26();
}
inline ::google::protobuf::int32 Performance::m26() const {
  return m26_;
}
inline void Performance::set_m26(::google::protobuf::int32 value) {
  set_has_m26();
  m26_ = value;
}

// required sfixed32 m27 = 27;
inline bool Performance::has_m27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance::set_has_m27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance::clear_has_m27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance::clear_m27() {
  m27_ = 0;
  clear_has_m27();
}
inline ::google::protobuf::int32 Performance::m27() const {
  return m27_;
}
inline void Performance::set_m27(::google::protobuf::int32 value) {
  set_has_m27();
  m27_ = value;
}

// required sfixed32 m28 = 28;
inline bool Performance::has_m28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance::set_has_m28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance::clear_has_m28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance::clear_m28() {
  m28_ = 0;
  clear_has_m28();
}
inline ::google::protobuf::int32 Performance::m28() const {
  return m28_;
}
inline void Performance::set_m28(::google::protobuf::int32 value) {
  set_has_m28();
  m28_ = value;
}

// required sfixed32 m29 = 29;
inline bool Performance::has_m29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance::set_has_m29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance::clear_has_m29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance::clear_m29() {
  m29_ = 0;
  clear_has_m29();
}
inline ::google::protobuf::int32 Performance::m29() const {
  return m29_;
}
inline void Performance::set_m29(::google::protobuf::int32 value) {
  set_has_m29();
  m29_ = value;
}

// required sfixed32 m30 = 30;
inline bool Performance::has_m30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance::set_has_m30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance::clear_has_m30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance::clear_m30() {
  m30_ = 0;
  clear_has_m30();
}
inline ::google::protobuf::int32 Performance::m30() const {
  return m30_;
}
inline void Performance::set_m30(::google::protobuf::int32 value) {
  set_has_m30();
  m30_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace performance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Performance_5f30_2eproto__INCLUDED
