// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Performance_10.proto

#ifndef PROTOBUF_Performance_5f10_2eproto__INCLUDED
#define PROTOBUF_Performance_5f10_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace performance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Performance_5f10_2eproto();
void protobuf_AssignDesc_Performance_5f10_2eproto();
void protobuf_ShutdownFile_Performance_5f10_2eproto();

class Performance;

// ===================================================================

class Performance : public ::google::protobuf::Message {
 public:
  Performance();
  virtual ~Performance();

  Performance(const Performance& from);

  inline Performance& operator=(const Performance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance& default_instance();

  void Swap(Performance* other);

  // implements Message ----------------------------------------------

  Performance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance& from);
  void MergeFrom(const Performance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed32 m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline ::google::protobuf::int32 m1() const;
  inline void set_m1(::google::protobuf::int32 value);

  // required sfixed32 m2 = 2;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 2;
  inline ::google::protobuf::int32 m2() const;
  inline void set_m2(::google::protobuf::int32 value);

  // required sfixed32 m3 = 3;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 3;
  inline ::google::protobuf::int32 m3() const;
  inline void set_m3(::google::protobuf::int32 value);

  // required sfixed32 m4 = 4;
  inline bool has_m4() const;
  inline void clear_m4();
  static const int kM4FieldNumber = 4;
  inline ::google::protobuf::int32 m4() const;
  inline void set_m4(::google::protobuf::int32 value);

  // required sfixed32 m5 = 5;
  inline bool has_m5() const;
  inline void clear_m5();
  static const int kM5FieldNumber = 5;
  inline ::google::protobuf::int32 m5() const;
  inline void set_m5(::google::protobuf::int32 value);

  // required sfixed32 m6 = 6;
  inline bool has_m6() const;
  inline void clear_m6();
  static const int kM6FieldNumber = 6;
  inline ::google::protobuf::int32 m6() const;
  inline void set_m6(::google::protobuf::int32 value);

  // required sfixed32 m7 = 7;
  inline bool has_m7() const;
  inline void clear_m7();
  static const int kM7FieldNumber = 7;
  inline ::google::protobuf::int32 m7() const;
  inline void set_m7(::google::protobuf::int32 value);

  // required sfixed32 m8 = 8;
  inline bool has_m8() const;
  inline void clear_m8();
  static const int kM8FieldNumber = 8;
  inline ::google::protobuf::int32 m8() const;
  inline void set_m8(::google::protobuf::int32 value);

  // required sfixed32 m9 = 9;
  inline bool has_m9() const;
  inline void clear_m9();
  static const int kM9FieldNumber = 9;
  inline ::google::protobuf::int32 m9() const;
  inline void set_m9(::google::protobuf::int32 value);

  // required sfixed32 m10 = 10;
  inline bool has_m10() const;
  inline void clear_m10();
  static const int kM10FieldNumber = 10;
  inline ::google::protobuf::int32 m10() const;
  inline void set_m10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m3();
  inline void clear_has_m3();
  inline void set_has_m4();
  inline void clear_has_m4();
  inline void set_has_m5();
  inline void clear_has_m5();
  inline void set_has_m6();
  inline void clear_has_m6();
  inline void set_has_m7();
  inline void clear_has_m7();
  inline void set_has_m8();
  inline void clear_has_m8();
  inline void set_has_m9();
  inline void clear_has_m9();
  inline void set_has_m10();
  inline void clear_has_m10();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m1_;
  ::google::protobuf::int32 m2_;
  ::google::protobuf::int32 m3_;
  ::google::protobuf::int32 m4_;
  ::google::protobuf::int32 m5_;
  ::google::protobuf::int32 m6_;
  ::google::protobuf::int32 m7_;
  ::google::protobuf::int32 m8_;
  ::google::protobuf::int32 m9_;
  ::google::protobuf::int32 m10_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Performance_5f10_2eproto();
  friend void protobuf_AssignDesc_Performance_5f10_2eproto();
  friend void protobuf_ShutdownFile_Performance_5f10_2eproto();

  void InitAsDefaultInstance();
  static Performance* default_instance_;
};
// ===================================================================


// ===================================================================

// Performance

// required sfixed32 m1 = 1;
inline bool Performance::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance::clear_m1() {
  m1_ = 0;
  clear_has_m1();
}
inline ::google::protobuf::int32 Performance::m1() const {
  return m1_;
}
inline void Performance::set_m1(::google::protobuf::int32 value) {
  set_has_m1();
  m1_ = value;
}

// required sfixed32 m2 = 2;
inline bool Performance::has_m2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance::set_has_m2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance::clear_has_m2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance::clear_m2() {
  m2_ = 0;
  clear_has_m2();
}
inline ::google::protobuf::int32 Performance::m2() const {
  return m2_;
}
inline void Performance::set_m2(::google::protobuf::int32 value) {
  set_has_m2();
  m2_ = value;
}

// required sfixed32 m3 = 3;
inline bool Performance::has_m3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance::set_has_m3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance::clear_has_m3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance::clear_m3() {
  m3_ = 0;
  clear_has_m3();
}
inline ::google::protobuf::int32 Performance::m3() const {
  return m3_;
}
inline void Performance::set_m3(::google::protobuf::int32 value) {
  set_has_m3();
  m3_ = value;
}

// required sfixed32 m4 = 4;
inline bool Performance::has_m4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance::set_has_m4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance::clear_has_m4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance::clear_m4() {
  m4_ = 0;
  clear_has_m4();
}
inline ::google::protobuf::int32 Performance::m4() const {
  return m4_;
}
inline void Performance::set_m4(::google::protobuf::int32 value) {
  set_has_m4();
  m4_ = value;
}

// required sfixed32 m5 = 5;
inline bool Performance::has_m5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance::set_has_m5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance::clear_has_m5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance::clear_m5() {
  m5_ = 0;
  clear_has_m5();
}
inline ::google::protobuf::int32 Performance::m5() const {
  return m5_;
}
inline void Performance::set_m5(::google::protobuf::int32 value) {
  set_has_m5();
  m5_ = value;
}

// required sfixed32 m6 = 6;
inline bool Performance::has_m6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance::set_has_m6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance::clear_has_m6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance::clear_m6() {
  m6_ = 0;
  clear_has_m6();
}
inline ::google::protobuf::int32 Performance::m6() const {
  return m6_;
}
inline void Performance::set_m6(::google::protobuf::int32 value) {
  set_has_m6();
  m6_ = value;
}

// required sfixed32 m7 = 7;
inline bool Performance::has_m7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance::set_has_m7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance::clear_has_m7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance::clear_m7() {
  m7_ = 0;
  clear_has_m7();
}
inline ::google::protobuf::int32 Performance::m7() const {
  return m7_;
}
inline void Performance::set_m7(::google::protobuf::int32 value) {
  set_has_m7();
  m7_ = value;
}

// required sfixed32 m8 = 8;
inline bool Performance::has_m8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance::set_has_m8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance::clear_has_m8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance::clear_m8() {
  m8_ = 0;
  clear_has_m8();
}
inline ::google::protobuf::int32 Performance::m8() const {
  return m8_;
}
inline void Performance::set_m8(::google::protobuf::int32 value) {
  set_has_m8();
  m8_ = value;
}

// required sfixed32 m9 = 9;
inline bool Performance::has_m9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance::set_has_m9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance::clear_has_m9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance::clear_m9() {
  m9_ = 0;
  clear_has_m9();
}
inline ::google::protobuf::int32 Performance::m9() const {
  return m9_;
}
inline void Performance::set_m9(::google::protobuf::int32 value) {
  set_has_m9();
  m9_ = value;
}

// required sfixed32 m10 = 10;
inline bool Performance::has_m10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance::set_has_m10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance::clear_has_m10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance::clear_m10() {
  m10_ = 0;
  clear_has_m10();
}
inline ::google::protobuf::int32 Performance::m10() const {
  return m10_;
}
inline void Performance::set_m10(::google::protobuf::int32 value) {
  set_has_m10();
  m10_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace performance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Performance_5f10_2eproto__INCLUDED
