/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * FAST_BUFFERS_LICENSE file included in this Fast Buffers distribution.
 *
 *************************************************************************
 * 
 * @file HelloWorld.cpp
 * This source file contains the definition of the described types in the IDL file.
 *
 * This file was generated by the tool fastbuffers.
 */

#include "HelloWorld.h"

#include "fastcdr/Cdr.h"


#include "fastcdr/exceptions/BadParamException.h"
using namespace eprosima::fastcdr::exception;

#include <utility>

HelloWorld::HelloWorld()
{
    m_message = "";
}

HelloWorld::~HelloWorld()
{
}

HelloWorld::HelloWorld(const HelloWorld &x)
{
    m_message = x.m_message;
}

HelloWorld::HelloWorld(HelloWorld &&x)
{
    m_message = x.m_message;
}

HelloWorld& HelloWorld::operator=(const HelloWorld &x)
{
    m_message = x.m_message;
    
    return *this;
}

HelloWorld& HelloWorld::operator=(HelloWorld &&x)
{
    m_message = x.m_message;
    
    return *this;
}

size_t HelloWorld::getMaxCdrSerializedSize(size_t current_alignment)
{
    size_t current_align = current_alignment;
            
    current_align += 255;

    return current_align;
}

void HelloWorld::serialize(eprosima::fastcdr::Cdr &scdr) const
{
    if(m_message.length() <= 255)
    scdr << m_message;
    else
    throw BadParamException(std::string("The maximum length was exceeded"));
}

void HelloWorld::deserialize(eprosima::fastcdr::Cdr &dcdr)
{
    dcdr >> m_message;
}

